in_source: |
  port:
                  word 1
  hello_str:
                  string "Hello, what is your name?\n"

  print_char:
                  lit port        ; symbol port_addr
                  load            ; symbol port
                  out             ;
                  ret             ;

  print_str:
                  dup                 ; str_addr str_addr
                  load                ; str_addr length
  print_loop:
                  dup                 ; str_addr length length
                  lit print_end       ; str_addr length length print_end
                  swap                ; str_addr length print_end length
                  jz                  ; str_addr length

                  swap                ; length str_addr
                  inc                 ; length str_addr+1
                  over                ; str_addr+1 length str_addr+1
                  load                ; str_addr+1 length symbol

                  lit print_char      ; str_addr+1 length symbol print_char
                  call                ; str_addr+1 length
                  dec                 ; str_addr+1 length-1
                  lit print_loop      ; str_addr+1 length-1 print_loop
                  jump                ; str_addr+1 length-1
  print_end:
                  ret                 ;

  read_char:
                  lit port        ; port_addr
                  load            ; port
                  in              ; in_symbol
                  ret             ; in_symbol

  var_symbol:
                  word 0
  length_addr:
                  word 0

  read_string:
                  dup             ; str_addr str_addr
                  lit length_addr ; str_addr str_addr length_addr
                  store           ; str_addr
  read_loop:
                  lit read_char   ; str_addr read_char
                  call            ; str_addr symbol
                  dup             ; str_addr symbol symbol
                  lit end_read    ; str_addr symbol symbol end_read
                  swap            ; str_addr symbol end_read symbol
                  jz              ; str_addr symbol

                  lit length_addr ; str_addr symbol length_addr_addr
                  load            ; str_addr symbol length_addr
                  dup             ; str_addr symbol length_addr length_addr
                  load            ; str_addr symbol length_addr length

                  inc             ; str_addr symbol length_addr length+1
                  swap            ; str_addr symbol length+1 length_addr
                  store           ; str_addr symbol
                  swap            ; symbol str_addr
                  inc             ; symbol str_addr+1
                  over            ; str_addr+1 symbol str_addr+1
                  store           ; str_addr+1

                  lit read_loop   ; str_addr+1 read_loop
                  jump            ; str_addr+1
  end_read:
                  drop            ; str_addr
                  drop            ;
                  ret             ;

  start:
                  lit 62          ; '>'
                  lit print_char  ; '>' print_char
                  call            ;
                  lit 32          ; ' '
                  lit print_char  ; ' ' print_char
                  call            ;

                  lit hello_str   ; hello_str
                  lit print_str   ; hello_str print_str
                  call            ;

                  lit user_input  ; user_input
                  lit read_string ; user_input read_string
                  call            ;

                  lit 60          ; '<'
                  lit print_char  ; '<' print_char
                  call            ;
                  lit 32          ; ' '
                  lit print_char  ; ' ' print_char
                  call            ;

                  lit user_input  ; user_input
                  lit print_str   ; user_input print_str
                  call            ;

                  lit 10          ; '\n'
                  lit print_char  ; '\n' print_char
                  call            ;

                  lit 62          ; '>'
                  lit print_char  ; '>' print_char
                  call            ;
                  lit 32          ; ' '
                  lit print_char  ; ' ' print_char
                  call            ;

                  lit hello_user  ; hello_user
                  lit print_str   ; hello_user print_str
                  call            ;

                  lit user_input  ; user_input
                  lit print_str   ; user_input print_str
                  call

                  lit 33          ; '!'
                  lit print_char  ; '!' print_char
                  call            ;

                  halt            ;

  user_input:
                  buf 30

  hello_user:
                  string "Hello, "

in_stdin: rmntim
out_stdout: |-
  > Hello, what is your name?
  < rmntim
  > Hello, rmntim!
out_log: |
  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 79 --> LIT 62

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 0 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 79 AR: 79 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 1 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 79 AR: 79 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 2 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [0 | 0]

  Return stack (size = 0): []

  PC: 79 AR: 79 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 3 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 2): [62 | 0]

  Return stack (size = 0): []

  PC: 80 AR: 79 BR: 0

  MEMORY READ VALUE: AR: 79 ---> OperandInstruction(opcode=LIT, operand=62)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 80 --> LIT 28

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 4 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [62 | 0]

  Return stack (size = 0): []

  PC: 80 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 5 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 2): [62 | 0]

  Return stack (size = 0): []

  PC: 80 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 6 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [62 | 62, 0]

  Return stack (size = 0): []

  PC: 80 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 7 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [28 | 62, 0]

  Return stack (size = 0): []

  PC: 81 AR: 80 BR: 0

  MEMORY READ VALUE: AR: 80 ---> OperandInstruction(opcode=LIT, operand=28)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 81 --> CALL

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 8 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [28 | 62, 0]

  Return stack (size = 0): []

  PC: 81 AR: 81 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 9 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [28 | 62, 0]

  Return stack (size = 0): []

  PC: 81 AR: 81 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 10 -- MPC: 55 / MicroInstruction: ReturnStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [28 | 62, 0]

  Return stack (size = 1): [82]

  PC: 81 AR: 81 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 11 -- MPC: 56 / MicroInstruction: LatchPC, PCJumpTypeTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [28 | 62, 0]

  Return stack (size = 1): [82]

  PC: 28 AR: 81 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 12 -- MPC: 57 / MicroInstruction: LatchTOS, TOSSelectDS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [62 | 62, 0]

  Return stack (size = 1): [82]

  PC: 28 AR: 81 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 13 -- MPC: 58 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterZero 

  Stack (size = 2): [62 | 0]

  Return stack (size = 1): [82]

  PC: 28 AR: 81 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 28 --> LIT 0

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 14 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [62 | 0]

  Return stack (size = 1): [82]

  PC: 28 AR: 28 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 15 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 2): [62 | 0]

  Return stack (size = 1): [82]

  PC: 28 AR: 28 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 16 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [62 | 62, 0]

  Return stack (size = 1): [82]

  PC: 28 AR: 28 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 17 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [0 | 62, 0]

  Return stack (size = 1): [82]

  PC: 29 AR: 28 BR: 0

  MEMORY READ VALUE: AR: 28 ---> OperandInstruction(opcode=LIT, operand=0)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 29 --> LOAD

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 18 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [0 | 62, 0]

  Return stack (size = 1): [82]

  PC: 29 AR: 29 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 19 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [0 | 62, 0]

  Return stack (size = 1): [82]

  PC: 29 AR: 29 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 20 -- MPC: 5 / MicroInstruction: LatchAR, ARSelectTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [0 | 62, 0]

  Return stack (size = 1): [82]

  PC: 29 AR: 0 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 21 -- MPC: 6 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [1 | 62, 0]

  Return stack (size = 1): [82]

  PC: 30 AR: 0 BR: 0

  MEMORY READ VALUE: AR: 0 ---> Data(value=1)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 30 --> OUT

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 22 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 62, 0]

  Return stack (size = 1): [82]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 23 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [1 | 62, 0]

  Return stack (size = 1): [82]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.IOController - I/O OPERATION OCCURS (OUT): port: 1 <--- value: 62

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 24 -- MPC: 62 / MicroInstruction: Output, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 62, 0]

  Return stack (size = 1): [82]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 25 -- MPC: 63 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [1 | 0]

  Return stack (size = 1): [82]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 26 -- MPC: 64 / MicroInstruction: LatchTOS, TOSSelectDS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [0 | 0]

  Return stack (size = 1): [82]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 27 -- MPC: 65 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 1): [82]

  PC: 31 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 31 --> RET

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 28 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 1): [82]

  PC: 31 AR: 31 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 29 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 1): [0 | ]

  Return stack (size = 1): [82]

  PC: 31 AR: 31 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 30 -- MPC: 59 / MicroInstruction: LatchPC, PCJumpTypeRET, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 1): [82]

  PC: 82 AR: 31 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 31 -- MPC: 60 / MicroInstruction: ReturnStackPop, LatchMPCounter, MicroProgramCounterZero 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 82 AR: 31 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 82 --> LIT 32

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 32 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 82 AR: 82 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 33 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 82 AR: 82 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 34 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [0 | 0]

  Return stack (size = 0): []

  PC: 82 AR: 82 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 35 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 2): [32 | 0]

  Return stack (size = 0): []

  PC: 83 AR: 82 BR: 0

  MEMORY READ VALUE: AR: 82 ---> OperandInstruction(opcode=LIT, operand=32)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 83 --> LIT 28

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 36 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [32 | 0]

  Return stack (size = 0): []

  PC: 83 AR: 83 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 37 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 2): [32 | 0]

  Return stack (size = 0): []

  PC: 83 AR: 83 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 38 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 32, 0]

  Return stack (size = 0): []

  PC: 83 AR: 83 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 39 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [28 | 32, 0]

  Return stack (size = 0): []

  PC: 84 AR: 83 BR: 0

  MEMORY READ VALUE: AR: 83 ---> OperandInstruction(opcode=LIT, operand=28)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 84 --> CALL

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 40 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [28 | 32, 0]

  Return stack (size = 0): []

  PC: 84 AR: 84 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 41 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [28 | 32, 0]

  Return stack (size = 0): []

  PC: 84 AR: 84 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 42 -- MPC: 55 / MicroInstruction: ReturnStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [28 | 32, 0]

  Return stack (size = 1): [85]

  PC: 84 AR: 84 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 43 -- MPC: 56 / MicroInstruction: LatchPC, PCJumpTypeTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [28 | 32, 0]

  Return stack (size = 1): [85]

  PC: 28 AR: 84 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 44 -- MPC: 57 / MicroInstruction: LatchTOS, TOSSelectDS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 32, 0]

  Return stack (size = 1): [85]

  PC: 28 AR: 84 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 45 -- MPC: 58 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterZero 

  Stack (size = 2): [32 | 0]

  Return stack (size = 1): [85]

  PC: 28 AR: 84 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 28 --> LIT 0

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 46 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [32 | 0]

  Return stack (size = 1): [85]

  PC: 28 AR: 28 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 47 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 2): [32 | 0]

  Return stack (size = 1): [85]

  PC: 28 AR: 28 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 48 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 32, 0]

  Return stack (size = 1): [85]

  PC: 28 AR: 28 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 49 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [0 | 32, 0]

  Return stack (size = 1): [85]

  PC: 29 AR: 28 BR: 0

  MEMORY READ VALUE: AR: 28 ---> OperandInstruction(opcode=LIT, operand=0)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 29 --> LOAD

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 50 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [0 | 32, 0]

  Return stack (size = 1): [85]

  PC: 29 AR: 29 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 51 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [0 | 32, 0]

  Return stack (size = 1): [85]

  PC: 29 AR: 29 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 52 -- MPC: 5 / MicroInstruction: LatchAR, ARSelectTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [0 | 32, 0]

  Return stack (size = 1): [85]

  PC: 29 AR: 0 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 53 -- MPC: 6 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [1 | 32, 0]

  Return stack (size = 1): [85]

  PC: 30 AR: 0 BR: 0

  MEMORY READ VALUE: AR: 0 ---> Data(value=1)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 30 --> OUT

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 54 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 32, 0]

  Return stack (size = 1): [85]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 55 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [1 | 32, 0]

  Return stack (size = 1): [85]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.IOController - I/O OPERATION OCCURS (OUT): port: 1 <--- value: 32

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 56 -- MPC: 62 / MicroInstruction: Output, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 32, 0]

  Return stack (size = 1): [85]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 57 -- MPC: 63 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [1 | 0]

  Return stack (size = 1): [85]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 58 -- MPC: 64 / MicroInstruction: LatchTOS, TOSSelectDS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [0 | 0]

  Return stack (size = 1): [85]

  PC: 30 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 59 -- MPC: 65 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 1): [85]

  PC: 31 AR: 30 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 31 --> RET

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 60 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 1): [85]

  PC: 31 AR: 31 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 61 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 1): [0 | ]

  Return stack (size = 1): [85]

  PC: 31 AR: 31 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 62 -- MPC: 59 / MicroInstruction: LatchPC, PCJumpTypeRET, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 1): [85]

  PC: 85 AR: 31 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 63 -- MPC: 60 / MicroInstruction: ReturnStackPop, LatchMPCounter, MicroProgramCounterZero 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 85 AR: 31 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 85 --> LIT 1

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 64 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 85 AR: 85 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 65 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 85 AR: 85 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 66 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [0 | 0]

  Return stack (size = 0): []

  PC: 85 AR: 85 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 67 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 2): [1 | 0]

  Return stack (size = 0): []

  PC: 86 AR: 85 BR: 0

  MEMORY READ VALUE: AR: 85 ---> OperandInstruction(opcode=LIT, operand=1)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 86 --> LIT 32

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 68 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [1 | 0]

  Return stack (size = 0): []

  PC: 86 AR: 86 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 69 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 2): [1 | 0]

  Return stack (size = 0): []

  PC: 86 AR: 86 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 70 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 1, 0]

  Return stack (size = 0): []

  PC: 86 AR: 86 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 71 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 0): []

  PC: 87 AR: 86 BR: 0

  MEMORY READ VALUE: AR: 86 ---> OperandInstruction(opcode=LIT, operand=32)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 87 --> CALL

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 72 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 0): []

  PC: 87 AR: 87 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 73 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 0): []

  PC: 87 AR: 87 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 74 -- MPC: 55 / MicroInstruction: ReturnStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 1): [88]

  PC: 87 AR: 87 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 75 -- MPC: 56 / MicroInstruction: LatchPC, PCJumpTypeTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 1): [88]

  PC: 32 AR: 87 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 76 -- MPC: 57 / MicroInstruction: LatchTOS, TOSSelectDS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 1, 0]

  Return stack (size = 1): [88]

  PC: 32 AR: 87 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 77 -- MPC: 58 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterZero 

  Stack (size = 2): [1 | 0]

  Return stack (size = 1): [88]

  PC: 32 AR: 87 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 32 --> DUP

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 78 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 
