in_source: |
  .data
  port:
                  word 1
  hello_str:
                  string "Hello, what is your name?\n"

  .text
  print_char:
                  lit port        ; symbol port_addr
                  load            ; symbol port
                  out             ;
                  ret             ;

  print_str:
                  dup                 ; str_addr str_addr
                  load                ; str_addr length
  print_loop:
                  dup                 ; str_addr length length
                  lit print_end       ; str_addr length length print_end
                  swap                ; str_addr length print_end length
                  jz                  ; str_addr length

                  swap                ; length str_addr
                  inc                 ; length str_addr+1
                  over                ; str_addr+1 length str_addr+1
                  load                ; str_addr+1 length symbol

                  lit print_char      ; str_addr+1 length symbol print_char
                  call                ; str_addr+1 length
                  dec                 ; str_addr+1 length-1
                  lit print_loop      ; str_addr+1 length-1 print_loop
                  jump                ; str_addr+1 length-1
  print_end:
                  ret                 ;

  read_char:
                  lit port        ; port_addr
                  load            ; port
                  in              ; in_symbol
                  ret             ; in_symbol

  .data
  length_addr:
                  word 0
  .text

  read_string:
                  dup             ; str_addr str_addr
                  lit length_addr ; str_addr str_addr length_addr
                  store           ; str_addr
  read_loop:
                  lit read_char   ; str_addr read_char
                  call            ; str_addr symbol
                  dup             ; str_addr symbol symbol
                  lit end_read    ; str_addr symbol symbol end_read
                  swap            ; str_addr symbol end_read symbol
                  jz              ; str_addr symbol

                  lit length_addr ; str_addr symbol length_addr_addr
                  load            ; str_addr symbol length_addr
                  dup             ; str_addr symbol length_addr length_addr
                  load            ; str_addr symbol length_addr length

                  inc             ; str_addr symbol length_addr length+1
                  swap            ; str_addr symbol length+1 length_addr
                  store           ; str_addr symbol
                  swap            ; symbol str_addr
                  inc             ; symbol str_addr+1
                  over            ; str_addr+1 symbol str_addr+1
                  store           ; str_addr+1

                  lit read_loop   ; str_addr+1 read_loop
                  jump            ; str_addr+1
  end_read:
                  drop            ; str_addr
                  drop            ;
                  ret             ;

  start:
                  lit hello_str   ; hello_str
                  lit print_str   ; hello_str print_str
                  call            ;

                  lit user_input  ; user_input
                  lit read_string ; user_input read_string
                  call            ;

                  lit hello_user  ; hello_user
                  lit print_str   ; hello_user print_str
                  call            ;

                  lit user_input  ; user_input
                  lit print_str   ; user_input print_str
                  call

                  lit 33          ; '!'
                  lit print_char  ; '!' print_char
                  call            ;

                  halt            ;

  .data
  user_input:
                  buf 30

  hello_user:
                  string "Hello, "

in_stdin: rmntim
out_stdout: |-
  Hello, what is your name?
  Hello, rmntim!
memory: |-
  0 - 00000001 - data 1
  1 - 0000001A - data 26
  2 - 00000048 - data 72
  3 - 00000065 - data 101
  4 - 0000006C - data 108
  5 - 0000006C - data 108
  6 - 0000006F - data 111
  7 - 0000002C - data 44
  8 - 00000020 - data 32
  9 - 00000077 - data 119
  10 - 00000068 - data 104
  11 - 00000061 - data 97
  12 - 00000074 - data 116
  13 - 00000020 - data 32
  14 - 00000069 - data 105
  15 - 00000073 - data 115
  16 - 00000020 - data 32
  17 - 00000079 - data 121
  18 - 0000006F - data 111
  19 - 00000075 - data 117
  20 - 00000072 - data 114
  21 - 00000020 - data 32
  22 - 0000006E - data 110
  23 - 00000061 - data 97
  24 - 0000006D - data 109
  25 - 00000065 - data 101
  26 - 0000003F - data 63
  27 - 0000000A - data 10
  28 - 00000004 00000000 - lit 0
  29 - 00000005 - load
  30 - 0000001B - out
  31 - 00000019 - ret
  32 - 0000000F - dup
  33 - 00000005 - load
  34 - 0000000F - dup
  35 - 00000004 0000002F - lit 47
  36 - 00000010 - swap
  37 - 00000015 - jz
  38 - 00000010 - swap
  39 - 0000000C - inc
  40 - 00000011 - over
  41 - 00000005 - load
  42 - 00000004 0000001C - lit 28
  43 - 00000018 - call
  44 - 0000000D - dec
  45 - 00000004 00000022 - lit 34
  46 - 00000017 - jump
  47 - 00000019 - ret
  48 - 00000004 00000000 - lit 0
  49 - 00000005 - load
  50 - 0000001A - in
  51 - 00000019 - ret
  52 - 00000000 - data 0
  53 - 0000000F - dup
  54 - 00000004 00000034 - lit 52
  55 - 00000006 - store
  56 - 00000004 00000030 - lit 48
  57 - 00000018 - call
  58 - 0000000F - dup
  59 - 00000004 0000004B - lit 75
  60 - 00000010 - swap
  61 - 00000015 - jz
  62 - 00000004 00000034 - lit 52
  63 - 00000005 - load
  64 - 0000000F - dup
  65 - 00000005 - load
  66 - 0000000C - inc
  67 - 00000010 - swap
  68 - 00000006 - store
  69 - 00000010 - swap
  70 - 0000000C - inc
  71 - 00000011 - over
  72 - 00000006 - store
  73 - 00000004 00000038 - lit 56
  74 - 00000017 - jump
  75 - 0000000E - drop
  76 - 0000000E - drop
  77 - 00000019 - ret
  78 - 00000004 00000001 - lit 1
  79 - 00000004 00000020 - lit 32
  80 - 00000018 - call
  81 - 00000004 0000005E - lit 94
  82 - 00000004 00000035 - lit 53
  83 - 00000018 - call
  84 - 00000004 0000007C - lit 124
  85 - 00000004 00000020 - lit 32
  86 - 00000018 - call
  87 - 00000004 0000005E - lit 94
  88 - 00000004 00000020 - lit 32
  89 - 00000018 - call
  90 - 00000004 00000021 - lit 33
  91 - 00000004 0000001C - lit 28
  92 - 00000018 - call
  93 - 0000001C - halt
  94 - 00000000 - data 0
  95 - 00000000 - data 0
  96 - 00000000 - data 0
  97 - 00000000 - data 0
  98 - 00000000 - data 0
  99 - 00000000 - data 0
  100 - 00000000 - data 0
  101 - 00000000 - data 0
  102 - 00000000 - data 0
  103 - 00000000 - data 0
  104 - 00000000 - data 0
  105 - 00000000 - data 0
  106 - 00000000 - data 0
  107 - 00000000 - data 0
  108 - 00000000 - data 0
  109 - 00000000 - data 0
  110 - 00000000 - data 0
  111 - 00000000 - data 0
  112 - 00000000 - data 0
  113 - 00000000 - data 0
  114 - 00000000 - data 0
  115 - 00000000 - data 0
  116 - 00000000 - data 0
  117 - 00000000 - data 0
  118 - 00000000 - data 0
  119 - 00000000 - data 0
  120 - 00000000 - data 0
  121 - 00000000 - data 0
  122 - 00000000 - data 0
  123 - 00000000 - data 0
  124 - 00000007 - data 7
  125 - 00000048 - data 72
  126 - 00000065 - data 101
  127 - 0000006C - data 108
  128 - 0000006C - data 108
  129 - 0000006F - data 111
  130 - 0000002C - data 44
  131 - 00000020 - data 32
out_log: |
  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 78 --> LIT 1

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 0 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 78 AR: 78 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 1 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 1): [0 | ]

  Return stack (size = 0): []

  PC: 78 AR: 78 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 2 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [0 | 0]

  Return stack (size = 0): []

  PC: 78 AR: 78 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 3 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 2): [1 | 0]

  Return stack (size = 0): []

  PC: 79 AR: 78 BR: 0

  MEMORY READ VALUE: AR: 78 ---> OperandInstruction(opcode=LIT, operand=1)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 79 --> LIT 32

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 4 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [1 | 0]

  Return stack (size = 0): []

  PC: 79 AR: 79 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 5 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 2): [1 | 0]

  Return stack (size = 0): []

  PC: 79 AR: 79 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 6 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 1, 0]

  Return stack (size = 0): []

  PC: 79 AR: 79 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 7 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 0): []

  PC: 80 AR: 79 BR: 0

  MEMORY READ VALUE: AR: 79 ---> OperandInstruction(opcode=LIT, operand=32)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 80 --> CALL

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 8 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 0): []

  PC: 80 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 9 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 0): []

  PC: 80 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 10 -- MPC: 55 / MicroInstruction: ReturnStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 1): [81]

  PC: 80 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 11 -- MPC: 56 / MicroInstruction: LatchPC, PCJumpTypeTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [32 | 1, 0]

  Return stack (size = 1): [81]

  PC: 32 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 12 -- MPC: 57 / MicroInstruction: LatchTOS, TOSSelectDS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 1, 0]

  Return stack (size = 1): [81]

  PC: 32 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 13 -- MPC: 58 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterZero 

  Stack (size = 2): [1 | 0]

  Return stack (size = 1): [81]

  PC: 32 AR: 80 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 32 --> DUP

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 14 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [1 | 0]

  Return stack (size = 1): [81]

  PC: 32 AR: 32 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 15 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 2): [1 | 0]

  Return stack (size = 1): [81]

  PC: 32 AR: 32 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 16 -- MPC: 26 / MicroInstruction: DataStackPush, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [1 | 1, 0]

  Return stack (size = 1): [81]

  PC: 33 AR: 32 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 33 --> LOAD

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 17 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 1, 0]

  Return stack (size = 1): [81]

  PC: 33 AR: 33 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 18 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [1 | 1, 0]

  Return stack (size = 1): [81]

  PC: 33 AR: 33 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 19 -- MPC: 5 / MicroInstruction: LatchAR, ARSelectTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 1, 0]

  Return stack (size = 1): [81]

  PC: 33 AR: 1 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 20 -- MPC: 6 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [26 | 1, 0]

  Return stack (size = 1): [81]

  PC: 34 AR: 1 BR: 0

  MEMORY READ VALUE: AR: 1 ---> Data(value=26)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 34 --> DUP

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 21 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [26 | 1, 0]

  Return stack (size = 1): [81]

  PC: 34 AR: 34 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 22 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [26 | 1, 0]

  Return stack (size = 1): [81]

  PC: 34 AR: 34 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 23 -- MPC: 26 / MicroInstruction: DataStackPush, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 4): [26 | 26, 1, 0]

  Return stack (size = 1): [81]

  PC: 35 AR: 34 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 35 --> LIT 47

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 24 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [26 | 26, 1, 0]

  Return stack (size = 1): [81]

  PC: 35 AR: 35 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 25 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 4): [26 | 26, 1, 0]

  Return stack (size = 1): [81]

  PC: 35 AR: 35 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 26 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [26 | 26, 26, 1]

  Return stack (size = 1): [81]

  PC: 35 AR: 35 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 27 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 5): [47 | 26, 26, 1]

  Return stack (size = 1): [81]

  PC: 36 AR: 35 BR: 0

  MEMORY READ VALUE: AR: 35 ---> OperandInstruction(opcode=LIT, operand=47)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 36 --> SWAP

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 28 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [47 | 26, 26, 1]

  Return stack (size = 1): [81]

  PC: 36 AR: 36 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 29 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 5): [47 | 26, 26, 1]

  Return stack (size = 1): [81]

  PC: 36 AR: 36 BR: 0



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 30 -- MPC: 27 / MicroInstruction: LatchBR, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [47 | 26, 26, 1]

  Return stack (size = 1): [81]

  PC: 36 AR: 36 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 31 -- MPC: 28 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [47 | 26, 1, 0]

  Return stack (size = 1): [81]

  PC: 36 AR: 36 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 32 -- MPC: 29 / MicroInstruction: DataStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [47 | 47, 26, 1]

  Return stack (size = 1): [81]

  PC: 36 AR: 36 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 33 -- MPC: 30 / MicroInstruction: LatchTOS, TOSSelectBR, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 5): [26 | 47, 26, 1]

  Return stack (size = 1): [81]

  PC: 37 AR: 36 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 37 --> JZ

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 34 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [26 | 47, 26, 1]

  Return stack (size = 1): [81]

  PC: 37 AR: 37 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 35 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 5): [26 | 47, 26, 1]

  Return stack (size = 1): [81]

  PC: 37 AR: 37 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 36 -- MPC: 44 / MicroInstruction: LatchPC, PCJumpTypeJZ, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [26 | 47, 26, 1]

  Return stack (size = 1): [81]

  PC: 38 AR: 37 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 37 -- MPC: 45 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [26 | 26, 1, 0]

  Return stack (size = 1): [81]

  PC: 38 AR: 37 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 38 -- MPC: 46 / MicroInstruction: LatchTOS, TOSSelectDS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [26 | 26, 1, 0]

  Return stack (size = 1): [81]

  PC: 38 AR: 37 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 39 -- MPC: 47 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterZero 

  Stack (size = 3): [26 | 1, 0]

  Return stack (size = 1): [81]

  PC: 38 AR: 37 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 38 --> SWAP

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 40 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [26 | 1, 0]

  Return stack (size = 1): [81]

  PC: 38 AR: 38 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 41 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [26 | 1, 0]

  Return stack (size = 1): [81]

  PC: 38 AR: 38 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 42 -- MPC: 27 / MicroInstruction: LatchBR, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [26 | 1, 0]

  Return stack (size = 1): [81]

  PC: 38 AR: 38 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 43 -- MPC: 28 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [26 | 0]

  Return stack (size = 1): [81]

  PC: 38 AR: 38 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 44 -- MPC: 29 / MicroInstruction: DataStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [26 | 26, 0]

  Return stack (size = 1): [81]

  PC: 38 AR: 38 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 45 -- MPC: 30 / MicroInstruction: LatchTOS, TOSSelectBR, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [1 | 26, 0]

  Return stack (size = 1): [81]

  PC: 39 AR: 38 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 39 --> INC

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 46 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [1 | 26, 0]

  Return stack (size = 1): [81]

  PC: 39 AR: 39 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 47 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [1 | 26, 0]

  Return stack (size = 1): [81]

  PC: 39 AR: 39 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 48 -- MPC: 22 / MicroInstruction: ALUPlus1, ALUSum, ALULeftOPZero, TOSSelectALU, LatchTOS, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 3): [2 | 26, 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 39 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 40 --> OVER

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 49 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [2 | 26, 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 40 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 50 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 3): [2 | 26, 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 40 BR: 1



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 51 -- MPC: 31 / MicroInstruction: LatchBR, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [2 | 26, 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 40 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 52 -- MPC: 32 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 2): [2 | 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 40 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 53 -- MPC: 33 / MicroInstruction: DataStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [2 | 2, 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 40 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 54 -- MPC: 34 / MicroInstruction: LatchTOS, TOSSelectBR, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [26 | 2, 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 40 BR: 26



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 55 -- MPC: 35 / MicroInstruction: LatchBR, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 3): [26 | 2, 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 40 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 56 -- MPC: 36 / MicroInstruction: DataStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [26 | 26, 2, 0]

  Return stack (size = 1): [81]

  PC: 40 AR: 40 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 57 -- MPC: 37 / MicroInstruction: LatchTOS, TOSSelectBR, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 4): [2 | 26, 2, 0]

  Return stack (size = 1): [81]

  PC: 41 AR: 40 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 41 --> LOAD

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 58 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [2 | 26, 2, 0]

  Return stack (size = 1): [81]

  PC: 41 AR: 41 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 59 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 4): [2 | 26, 2, 0]

  Return stack (size = 1): [81]

  PC: 41 AR: 41 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 60 -- MPC: 5 / MicroInstruction: LatchAR, ARSelectTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [2 | 26, 2, 0]

  Return stack (size = 1): [81]

  PC: 41 AR: 2 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 61 -- MPC: 6 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 4): [72 | 26, 2, 0]

  Return stack (size = 1): [81]

  PC: 42 AR: 2 BR: 2

  MEMORY READ VALUE: AR: 2 ---> Data(value=72)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 42 --> LIT 28

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 62 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [72 | 26, 2, 0]

  Return stack (size = 1): [81]

  PC: 42 AR: 42 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 63 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 4): [72 | 26, 2, 0]

  Return stack (size = 1): [81]

  PC: 42 AR: 42 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 64 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [72 | 72, 26, 2]

  Return stack (size = 1): [81]

  PC: 42 AR: 42 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 65 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 5): [28 | 72, 26, 2]

  Return stack (size = 1): [81]

  PC: 43 AR: 42 BR: 2

  MEMORY READ VALUE: AR: 42 ---> OperandInstruction(opcode=LIT, operand=28)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 43 --> CALL

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 66 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [28 | 72, 26, 2]

  Return stack (size = 1): [81]

  PC: 43 AR: 43 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 67 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 5): [28 | 72, 26, 2]

  Return stack (size = 1): [81]

  PC: 43 AR: 43 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 68 -- MPC: 55 / MicroInstruction: ReturnStackPush, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [28 | 72, 26, 2]

  Return stack (size = 2): [44, 81]

  PC: 43 AR: 43 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 69 -- MPC: 56 / MicroInstruction: LatchPC, PCJumpTypeTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [28 | 72, 26, 2]

  Return stack (size = 2): [44, 81]

  PC: 28 AR: 43 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 70 -- MPC: 57 / MicroInstruction: LatchTOS, TOSSelectDS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [72 | 72, 26, 2]

  Return stack (size = 2): [44, 81]

  PC: 28 AR: 43 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 71 -- MPC: 58 / MicroInstruction: DataStackPop, LatchMPCounter, MicroProgramCounterZero 

  Stack (size = 4): [72 | 26, 2, 0]

  Return stack (size = 2): [44, 81]

  PC: 28 AR: 43 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 28 --> LIT 0

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 72 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 4): [72 | 26, 2, 0]

  Return stack (size = 2): [44, 81]

  PC: 28 AR: 28 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 73 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 4): [72 | 26, 2, 0]

  Return stack (size = 2): [44, 81]

  PC: 28 AR: 28 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 74 -- MPC: 3 / MicroInstruction: DataStackPush, LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [72 | 72, 26, 2]

  Return stack (size = 2): [44, 81]

  PC: 28 AR: 28 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 75 -- MPC: 4 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 

  Stack (size = 5): [0 | 72, 26, 2]

  Return stack (size = 2): [44, 81]

  PC: 29 AR: 28 BR: 2

  MEMORY READ VALUE: AR: 28 ---> OperandInstruction(opcode=LIT, operand=0)



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - NOW EXECUTING INSTRUCTION PC: 29 --> LOAD

  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 76 -- MPC: 0 / MicroInstruction: LatchAR, ARSelectPC, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [0 | 72, 26, 2]

  Return stack (size = 2): [44, 81]

  PC: 29 AR: 29 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 77 -- MPC: 1 / MicroInstruction: LatchMPCounter, MicroProgramCounterOpcode 

  Stack (size = 5): [0 | 72, 26, 2]

  Return stack (size = 2): [44, 81]

  PC: 29 AR: 29 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 78 -- MPC: 5 / MicroInstruction: LatchAR, ARSelectTOS, LatchMPCounter, MicroProgramCounterNext 

  Stack (size = 5): [0 | 72, 26, 2]

  Return stack (size = 2): [44, 81]

  PC: 29 AR: 0 BR: 2



  [INFO]: ru.rmntim.csa4.comp.ControlUnit - 

  TICK 79 -- MPC: 6 / MicroInstruction: LatchTOS, TOSSelectMemory, LatchMPCounter, MicroProgramCounterZero, LatchPC, PCJumpTypeNext 
